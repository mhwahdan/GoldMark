# Generated by Django 3.2.5 on 2021-09-15 23:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Bank name')),
                ('office', models.CharField(max_length=100, verbose_name='Office address')),
                ('number', models.CharField(max_length=20, verbose_name='Number')),
                ('hotline', models.CharField(blank=True, max_length=10, null=True, verbose_name='Hotline')),
                ('email', models.EmailField(max_length=254, verbose_name='Bank email')),
                ('website', models.URLField(verbose_name='Website link')),
                ('image', models.ImageField(upload_to='propetyMarket/images/banks/profiles/', verbose_name='Bank image')),
                ('interest', models.FloatField(verbose_name='Bank interest rate')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Agency name')),
                ('email', models.EmailField(max_length=254, verbose_name='Agency email')),
                ('headquarters', models.CharField(max_length=100, verbose_name='Agency head quarters')),
                ('phone', models.CharField(max_length=20, verbose_name='Agency phone number')),
                ('image', models.ImageField(blank=True, null=True, upload_to='propetyMarket/images/Agencies/profiles/', verbose_name='Agency logo')),
                ('website', models.URLField(verbose_name='Developer website')),
            ],
        ),
        migrations.CreateModel(
            name='FaqCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Category name')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Location name')),
                ('latitude', models.IntegerField(default=0, verbose_name='latitude coordinates')),
                ('longitude', models.IntegerField(default=0, verbose_name='longitude coordinates')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property name')),
                ('status', models.BooleanField(choices=[(True, 'For sale'), (False, 'For rent')], verbose_name='Status')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('price', models.IntegerField(verbose_name='property price')),
                ('features', models.JSONField(blank=True, default=dict, null=True, verbose_name='property features')),
                ('info', models.JSONField(blank=True, default=dict, null=True, verbose_name='additional info as json string')),
                ('address', models.CharField(max_length=100, verbose_name='property address')),
                ('latitude', models.FloatField(default=0, verbose_name='google latitude')),
                ('longitude', models.FloatField(default=0, verbose_name='google longitude')),
                ('video', models.FileField(blank=True, null=True, upload_to='propetyMarket/images/properties/videos/', verbose_name='property video')),
                ('time_posted', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time posted')),
                ('size', models.IntegerField(verbose_name='property lot size')),
                ('description', models.CharField(max_length=500, verbose_name='property description')),
                ('plan', models.ImageField(blank=True, null=True, upload_to='propetyMarket/images/properties/plans/', verbose_name='property plan view')),
                ('area', models.IntegerField(verbose_name='Property total area')),
                ('bedrooms', models.IntegerField(blank=True, null=True, verbose_name='Number of bedrooms')),
                ('bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Number of bathrooms')),
                ('image', models.ImageField(upload_to='propetyMarket/images/properties/residential/profiles', verbose_name='profile image')),
                ('garage', models.IntegerField(blank=True, null=True, verbose_name='number of garage places')),
                ('type', models.CharField(choices=[('duplex', 'duplex'), ('clinic', 'clinic'), ('restaurant', 'restaurant'), ('office', 'office'), ('twin house', 'twin house'), ('town house', 'town house'), ('retail', 'retail'), ('apartment', 'apartment'), ('serviced apartment', 'serviced apartment'), ('villa', 'villa'), ('Industrial', 'Industrial'), ('studio', 'studio'), ('chalet', 'chalet'), ('pent house', 'pent house')], max_length=100, verbose_name='Property Type')),
                ('Developer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.developer', verbose_name='Development group')),
                ('location', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.location', verbose_name='Location')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='propetyMarket.property', verbose_name='Property it belongs to')),
            ],
            options={
                'ordering': ['time_posted'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='propetyMarket/images/properties/residential/', verbose_name='Image location')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.property', verbose_name='Property it belongs to')),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.faqcategory', verbose_name='Category')),
            ],
            options={
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='commentator name')),
                ('email', models.EmailField(max_length=100, verbose_name='email')),
                ('comment', models.CharField(max_length=1000, verbose_name='the comment')),
                ('website', models.URLField(blank=True, null=True, verbose_name='website')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.property', verbose_name='Comments')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propetyMarket.developer', verbose_name='Agency the agent belongs to')),
            ],
        ),
    ]
