# Generated by Django 3.2.5 on 2021-07-21 11:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Agency email')),
                ('headquarters', models.TextField(verbose_name='Agency head quarters')),
                ('phone', models.CharField(max_length=20, verbose_name='Agency phone number')),
                ('image', models.ImageField(blank=True, null=True, upload_to='propertyMarket/images/Agencies/profiles/', verbose_name='Bank image')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.agency', verbose_name='Agency the agent belongs to')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='the user name')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Bank name')),
                ('office', models.CharField(max_length=100, verbose_name='Office address')),
                ('number', models.CharField(max_length=20, verbose_name='Number')),
                ('hotline', models.CharField(blank=True, max_length=10, null=True, verbose_name='Hotline')),
                ('email', models.EmailField(max_length=254, verbose_name='Bank email')),
                ('website', models.URLField(verbose_name='Website link')),
                ('image', models.ImageField(upload_to='propertyMarket/images/banks/profiles/', verbose_name='Bank image')),
            ],
        ),
        migrations.CreateModel(
            name='CommercialProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property name')),
                ('status', models.BooleanField(verbose_name='For sale')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('price', models.IntegerField(verbose_name='property price')),
                ('features', models.JSONField(default=dict, verbose_name='property features')),
                ('info', models.JSONField(default=dict, verbose_name='additional info as json string')),
                ('address', models.CharField(max_length=100, verbose_name='property address')),
                ('latitude', models.IntegerField(default=0, verbose_name='google latitude')),
                ('longitude', models.IntegerField(default=0, verbose_name='google longitude')),
                ('video', models.FileField(blank=True, null=True, upload_to='propertyMarket/images/properties/videos/', verbose_name='property video')),
                ('time_posted', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time posted')),
                ('size', models.IntegerField(verbose_name='property lot size')),
                ('description', models.CharField(max_length=500, verbose_name='property description')),
                ('plan', models.ImageField(blank=True, null=True, upload_to='propertyMarket/images/properties/plans/', verbose_name='property plan view')),
                ('area', models.IntegerField(verbose_name='Property total area')),
                ('Agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.agent', verbose_name='Agency')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Company name')),
            ],
        ),
        migrations.CreateModel(
            name='CompoundProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property name')),
                ('status', models.BooleanField(verbose_name='For sale')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('price', models.IntegerField(verbose_name='property price')),
                ('features', models.JSONField(default=dict, verbose_name='property features')),
                ('info', models.JSONField(default=dict, verbose_name='additional info as json string')),
                ('address', models.CharField(max_length=100, verbose_name='property address')),
                ('latitude', models.IntegerField(default=0, verbose_name='google latitude')),
                ('longitude', models.IntegerField(default=0, verbose_name='google longitude')),
                ('video', models.FileField(blank=True, null=True, upload_to='propertyMarket/images/properties/videos/', verbose_name='property video')),
                ('time_posted', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time posted')),
                ('size', models.IntegerField(verbose_name='property lot size')),
                ('description', models.CharField(max_length=500, verbose_name='property description')),
                ('plan', models.ImageField(blank=True, null=True, upload_to='propertyMarket/images/properties/plans/', verbose_name='property plan view')),
                ('area', models.IntegerField(verbose_name='Compound total area')),
                ('garage', models.IntegerField(verbose_name='number of garage places')),
                ('Agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.agent', verbose_name='Agency')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Location name')),
                ('latitude', models.IntegerField(default=0, verbose_name='latitude coordinates')),
                ('longitude', models.IntegerField(default=0, verbose_name='longitude coordinates')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property name')),
                ('status', models.BooleanField(verbose_name='For sale')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('price', models.IntegerField(verbose_name='property price')),
                ('features', models.JSONField(default=dict, verbose_name='property features')),
                ('info', models.JSONField(default=dict, verbose_name='additional info as json string')),
                ('address', models.CharField(max_length=100, verbose_name='property address')),
                ('latitude', models.IntegerField(default=0, verbose_name='google latitude')),
                ('longitude', models.IntegerField(default=0, verbose_name='google longitude')),
                ('video', models.FileField(blank=True, null=True, upload_to='propertyMarket/images/properties/videos/', verbose_name='property video')),
                ('time_posted', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time posted')),
                ('size', models.IntegerField(verbose_name='property lot size')),
                ('description', models.CharField(max_length=500, verbose_name='property description')),
                ('plan', models.ImageField(blank=True, null=True, upload_to='propertyMarket/images/properties/plans/', verbose_name='property plan view')),
                ('area', models.IntegerField(verbose_name='Property total area')),
                ('bedrooms', models.IntegerField(verbose_name='Number of bedrooms')),
                ('bathrooms', models.IntegerField(verbose_name='Number of bathrooms')),
                ('garage', models.IntegerField(verbose_name='number of garage places')),
                ('Agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.agent', verbose_name='Agency')),
                ('CompoundProperty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.compoundproperty', verbose_name='Compound it belongs to')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.location', verbose_name='Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResidentialPropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='propertyMarket/images/properties/residential/', verbose_name='Image location')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.residentialproperty', verbose_name='Property it belongs to')),
            ],
        ),
        migrations.CreateModel(
            name='CompoundPropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='propertyMarket/images/properties/compound/', verbose_name='Image location')),
                ('Company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.company', verbose_name='Company it belongs to')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.compoundproperty', verbose_name='Property it belongs to')),
            ],
        ),
        migrations.AddField(
            model_name='compoundproperty',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.location', verbose_name='Location'),
        ),
        migrations.CreateModel(
            name='CommercialPropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='propertyMarket/images/properties/commercial/', verbose_name='Image location')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.commercialproperty', verbose_name='Property it belongs to')),
            ],
        ),
        migrations.AddField(
            model_name='commercialproperty',
            name='CompoundProperty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.compoundproperty', verbose_name='Compound it belongs to'),
        ),
        migrations.AddField(
            model_name='commercialproperty',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='propertyMarket.location', verbose_name='Location'),
        ),
    ]
